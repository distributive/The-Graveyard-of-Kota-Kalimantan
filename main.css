html,
body,
#ui-mode,
#ui-flags {
  height: 100%;
  width: 100%;

  position: relative;

  font-family: "Anta", sans-serif !important;
  font-weight: 400;
  font-style: normal;

  overflow: hidden;
}

img {
  user-drag: none;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.skill-icon {
  height: 0.8em;
  transform: translate(-0.15em, -0.08em);
}
.inline-icon {
  height: 1em;
  transform: translate(-0.15em, -0.08em);
}
.inline-token {
  height: 1em;
  transform: translateY(-0.08em);
}

.stat {
  text-align: center;
  width: 2.5em;
}
.stat span {
  width: 1em;
}

body {
  background: grey;
}
/* body:before {
  content: "";
  position: absolute;
  width: 200%;
  height: 200%;
  top: -50%;
  left: -50%;
  z-index: -1;
  background: url("img/misc/backgroundTile.png") repeat;
  background-size: 400px;
  filter: blur(0.5px);
  transform: rotate(-2deg);
} */

#control-panel {
  border-top-left-radius: 14px;
  border-left: solid 3px black;
  border-top: solid 3px black;
  background-color: white;
}
#location-window {
  border-bottom-right-radius: 14px;
  border-right: 3px solid white;
  border-bottom: 3px solid white;
  box-shadow: 0 0 10px black;
}
#location-buttons {
  border-top-left-radius: 14px;
  background-color: white;
  box-shadow: 0 0 5px black;
}
.modal-dialog {
  border: solid 3px black;
  border-radius: 14px;
}
#card-focused {
  border-left: solid 3px white;
  border-bottom: solid 3px white;
  border-bottom-left-radius: 14px;
  background-color: black;
  box-shadow: 0 0 5px black;
}

/* Buttons */
button {
  border-radius: 6px;
  color: black;
  border: 2px solid #4f628e;
  background-color: #7887ab;
}
button:hover {
  color: white;
  border: 2px solid #2e4172;
  background-color: #4f628e;
}
button:active {
  color: white;
  border: 2px solid #7887ab;
  background-color: #2e4172;
}
button:hover .inline-icon,
button:active .inline-icon {
  filter: invert();
}
button:disabled {
  color: #888888;
  border: 2px solid #ababab;
  background-color: #ababab;
}
button:disabled .inline-icon {
  filter: invert() brightness(0.5) !important;
}

/* Action buttons */
.action-button {
  flex: 1;
}

#ui-mode:not(
    .uimode-select-action,
    .uimode-movement,
    .uimode-select-enemy,
    .uimode-end-turn
  )
  .action-button,
#ui-mode.uimode-movement .action-button:not(#action-move),
#ui-mode.uimode-select-enemy
  .action-button:not(#action-engage, #action-fight, #action-evade),
#ui-mode.uimode-end-turn .action-button:not(#action-end-turn),
#ui-mode:not(.uimode-end-turn) #action-end-turn,
#ui-flags:not(.can-draw) #action-draw,
#ui-flags:not(.can-investigate) #action-investigate,
#ui-flags:not(.can-engage, .can-cancel-engage) #action-engage,
#ui-flags:not(.can-fight, .can-cancel-fight) #action-fight,
#ui-flags:not(.can-evade, .can-cancel-evade) #action-evade {
  pointer-events: none;

  color: #888888 !important;
  border: 2px solid #ababab !important;
  background-color: #ababab !important;
}
#ui-mode:not(.uimode-select-action, .uimode-movement)
  .action-button
  .inline-icon,
#ui-mode.uimode-movement .action-button:not(#action-move) .inline-icon {
  filter: invert() brightness(0.5) !important;
}

#ui-mode.uimode-movement #action-move-default,
#ui-mode:not(.uimode-movement) #action-move-cancel,
#ui-flags.can-cancel-engage #action-engage-default,
#ui-flags:not(.can-cancel-engage) #action-engage-cancel,
#ui-flags.can-cancel-fight #action-fight-default,
#ui-flags:not(.can-cancel-fight) #action-fight-cancel,
#ui-flags.can-cancel-evade #action-evade-default,
#ui-flags:not(.can-cancel-evade) #action-evade-cancel {
  display: none;
}

/* Cards */
.card-image {
  border-radius: 5px;
  transition: scale 1s ease-in, filter 1s;
}
.card-image.flipping {
  scale: 0 1;
}

#card-focused {
  position: absolute;
  top: 0;
  right: 0;
  height: 42%;
  padding: 10px;
}
#card-focused-image {
  position: absolute;
  top: 50%;
  left: 50%;
  width: calc(100% - 20px);
  height: auto !important;
  transform: translate(-50%, -50%);
  opacity: 0;
  transition: opacity 0.25s, transform 0.2s;
}
#card-focused-image.focused {
  opacity: 1;
}
#card-focused-image.unfocused {
  opacity: 0.75;
}
#card-focused-image.focused:hover,
#card-focused-image.unfocused:hover {
  transform: translate(-50%, -50%) scale(1.05);
  cursor: pointer;
  opacity: 1 !important;
}

.card-padding {
  opacity: 0;
}

/* Runner cards */
#stack,
#heap {
  --size: 10px;
  position: relative;
}
#stack-top-card,
#heap-top-card {
  position: absolute;
  left: 0;
  border-radius: 5px;
  transform: translate(var(--size), calc(-1 * var(--size)));
  box-shadow: 0 0 0 #00000000,
    calc(-1 * var(--size) / 6) calc(1 * var(--size) / 6) 0 #303030,
    calc(-2 * var(--size) / 6) calc(2 * var(--size) / 6) 0 #282828,
    calc(-3 * var(--size) / 6) calc(3 * var(--size) / 6) 0 #262626,
    calc(-4 * var(--size) / 6) calc(4 * var(--size) / 6) 0 #242424,
    calc(-5 * var(--size) / 6) calc(5 * var(--size) / 6) 0 #222222,
    calc(-6 * var(--size) / 6) calc(6 * var(--size) / 6) 0 #202020,
    calc(-1 * var(--size)) calc(var(--size)) 10px black;
  transition: all 0.2s;
}
#stack.empty #stack-top-card,
#heap.empty #heap-top-card {
  display: none;
}
#stack:not(.empty) #stack-empty,
#heap:not(.empty) #heap-empty {
  opacity: 0;
}
#stack-empty,
#heap-empty {
  border-radius: 5px;
}

/* Grip */
#grip {
  position: relative;
  z-index: 1;
}
.grip-card {
  --index: 0;
  --hand-size: 1;
  position: absolute;
  left: 50%;
  transform: translateX(
    calc(-50% + 90px * (var(--index) - (var(--hand-size) - 1) / 2))
  );
  rotate: calc(1deg * (var(--index) - (var(--hand-size) - 1) / 2));
  transition: transform 0.25s, rotate 0.2s;
}
.grip-card-image {
  transform: translate(0, 70px);
  transition: transform 0.25s, box-shadow 0.1s;
}
.grip-card:not(.selected-card):hover {
  rotate: 0deg;
  z-index: 100;
}
.grip-card:not(.selected-card):hover .grip-card-image {
  transform: translate(0, -10px) scale(1.2);
}
.grip-card.transition-out {
  transform: translateX(
      calc(-50% + 90px * (var(--index) - (var(--hand-size) - 1) / 2))
    )
    scale(0);
}

.grip-card.selected-card {
  rotate: 0deg;
  z-index: 90;
  transform: translate(
    calc(-50% + 45px * (var(--index) - (var(--hand-size) - 1) / 2)),
    -80%
  );
}
.grip-card.selected-card .grip-card-image {
  transform: none;
  box-shadow: 0 0 15px black;
}
.grip-card.selected-card .grip-card-image {
  transform: none;
  box-shadow: 0 0 15px white;
}
.grip-card.selected-card .grip-card-image:hover {
  scale: 1.01;
}

.uimode-select-action .grip-card,
.uimode-select-grip-card .grip-card {
  cursor: pointer;
}
.grip-card.animate .card-image {
  animation: shake-card-unplayable 0.3s;
}
@keyframes shake-card-unplayable {
  12.5% {
    transform: translate(0, -10px) scale(1.2) rotate(-2deg);
  }
  37.5% {
    transform: translate(0, -10px) scale(1.2) rotate(2deg);
  }
  62.5% {
    transform: translate(0, -10px) scale(1.2) rotate(-1deg);
  }
  87.5% {
    transform: translate(0, -10px) scale(1.2) rotate(1deg);
  }
  100% {
    transform: translate(0, -10px) scale(1.2) rotate(0);
  }
}

/* Installed cards */
#rig {
  overflow-y: none;
}
.installed-card {
  position: relative;
  height: 32%;
  aspect-ratio: 160/224 !important;
  animation: install 0.2s;
}
@keyframes install {
  from {
    scale: 0;
  }
  to {
    scale: 1;
  }
}
.installed-card .card-image {
  position: absolute;
  left: 0;
  top: 0;
  transition: transform 0.2s, scale 0.2s;
}
.installed-card:hover .card-image {
  transform: scale(1.01);
}
.uimode-select-installed-card .installed-card:hover .card-image {
  transform: translateY(-20px);
}
.installed-card.selected-card .card-image {
  box-shadow: 0 0 15px white;
}
.installed-card.selected-card .card-image {
  scale: 1.05;
}
.installed-card.selected-card .card-image:not(:hover) {
  transform: translateY(-10px);
}

.installed-card.perceived-trashed .card-image {
  filter: saturate(0) blur(1px);
}
.installed-card.perceived-trashed .hosted-counters {
  display: none;
}
.installed-card.perceived-trashed::after {
  content: "";
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background: url("img/card/trashedCardOverlay.png") no-repeat;
  background-size: 100% 100%;
  z-index: 10000;
}

/* Locations */
#location-window {
  --local-x: 320px;
  --local-y: 210px;
  --zoom: 0.5; /* 0 <= zoom <= 1 */
  position: relative;
  width: 100%;
  height: 100%;
  padding: 0;
  overflow: hidden;
  background-color: black;
  background: repeat url("img/misc/screenFG.png"),
    repeat url("img/misc/screenMG.png"), repeat url("img/misc/screenBG.png");
  background-size: 20px, 20px, 66px;
  animation: location-window-screen infinite 30s linear;
}
@keyframes location-window-screen {
  0% {
    background-position: 0px 0px,
      calc(var(--local-x) / 2) calc(var(--local-y) / 2),
      calc(var(--local-x) / 4) calc(var(--local-y) / 4);
  }
  100% {
    background-position: 0px 256px,
      calc(var(--local-x) / 2) calc(var(--local-y) / 2 - 128px),
      calc(var(--local-x) / 4) calc(var(--local-y) / 4);
  }
}
#location-map {
  position: relative;
  transform: translate(var(--local-x), var(--local-y)) scale(var(--zoom));
  width: 0px;
  height: 0px;
  margin: 0;
  padding: 0;
  transition: transform 0.2s, --zoom 0.1s;
}
#location-map.dragged {
  transition: --zoom 0.1s;
}
.location-container {
  --x-pos: 0px;
  --y-pos: 0px;
  position: absolute;
  border-radius: 5px;
  transform: translate(calc(var(--x-pos) - 50%), calc(var(--y-pos) - 50%));
  width: 160px;
  background-color: black;
  z-index: 10;
}
.location-image {
  width: 100%;
  filter: saturate(0.5);
  z-index: 15;
}
:not(.uimode-select-enemy) .location-container:hover {
  z-index: 1000;
}

.location-container.current-location {
  box-shadow: 0 0 20px #d4c26b, 0 0 20px #d4c26b;
}
.current-location .location-image {
  filter: saturate(1);
}

.uimode-movement .location-container.valid-destination {
  outline: 2px solid #7887ab;
}
.uimode-movement .location-container.valid-destination:hover {
  outline: 2px solid #fceda6;
}
.uimode-movement
  .location-container:not(.valid-destination, .current-location)
  .location-image {
  filter: saturate(0) blur(1px) brightness(0.25);
}

.uimode-select-enemy .location-container .location-image,
.uimode-select-enemy .enemy-container:not(.selectable) .enemy-image {
  filter: saturate(0) blur(1px) brightness(0.25);
}

.location-connector {
  --mid-x: 0px;
  --mid-y: 0px;
  --length: 0px;
  --rotation: 0deg;
  position: absolute;
  transform: translate(calc(var(--mid-x) - 50%), calc(var(--mid-y) - 50%))
    rotate(var(--rotation));
  width: var(--length);
  height: 0;
  border: 2px dotted #7887ab;
  z-index: 5;
}
.uimode-movement .location-connector.valid-connection {
  border: 3px solid #fceda6;
}

#location-buttons {
  position: absolute;
  right: 0;
  bottom: 0;
  padding: 10px 6px 8px 10px;
}
#location-buttons button {
  color: black;
  border: none;
  background: none;
}
#location-buttons button:hover {
  color: #555;
}
#location-buttons button:active {
  color: #aaa;
}
#location-buttons button:disabled {
  color: #ccc;
  border: none;
  background: none;
}

/* Enemies */
.enemy-container {
  --x-pos: 0px;
  --y-pos: 0px;
  --index: 0;
  position: absolute;
  border-radius: 5px;
  transform: translate(
    calc(var(--x-pos) - 50% + 40px + 45px * var(--index)),
    calc(var(--y-pos) - 50% - 40px)
  );
  width: 145px;
  transition: transform 0.5s ease-out;
  z-index: calc(50 + 0.01 * var(--index));
}
.enemy-image {
  width: 100%;
  box-shadow: 0 0 15px black;
  filter: saturate(0.5);
  transition: scale 1s ease-in, filter 1s, scale 0.1s, box-shadow 0.1s !important;
  z-index: 50;
}
.enemy-container.engaged .enemy-image {
  box-shadow: 0 0 20px red;
  animation: engaged-enemy 1s ease calc(-0.2s * var(--index)) infinite;
}
@keyframes engaged-enemy {
  0%,
  100% {
    scale: 1;
  }
  50% {
    scale: 1.04;
  }
}

.uimode-select-enemy .enemy-container.selectable .enemy-image {
  outline: 2px solid #7887ab;
}
.uimode-select-enemy .enemy-container.selectable:hover .enemy-image {
  scale: 1.05 !important;
  outline: 2px solid #fceda6;
}
.uimode-select-enemy .enemy-container.selectable.engaged:hover .enemy-image {
  box-shadow: 0 0 20px red, 0 0 20px red;
}

/* Agenda */

#agenda {
  position: relative;
}

/* Hosted counters */

.hosted-counters {
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 5px;
  top: 0;
  left: 50%;
  height: 100%;
  width: 0;
  transition: all 0.2s;
}
#agenda .hosted-counters {
  height: 57%;
}

.location-container:not(:hover) > .hosted-counters.covered,
:not(.location-container) > .hosted-counters.covered {
  left: 24px;
  height: 50%;
  gap: 2.5px;
}

.damage,
.clues,
.doom,
.power {
  height: 36px;
  width: 36px;
  line-height: 31px;
  text-align: center;
  transform: translate(-50%, 0);
  border: 3px solid;
  border-radius: 100%;
  box-shadow: 0 0 10px 5px #00000050 inset;
  z-index: 20;
  pointer-events: none;
}
.damage {
  color: white;
  border-color: #b27544;
  background-color: #b27544;
}
.clues {
  color: white;
  border-color: #354977;
  background-color: #354977;
}
.doom {
  color: white;
  border-color: #5f0505;
  background-color: #5f0505;
}
.power {
  color: white;
  border-color: #4e357a;
  background-color: #4e357a;
}

/* Modal */

/* Alerts */
#alert-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  z-index: 10000;
}
.alert {
  width: fit-content;
  max-width: 80%;
  margin: 5px auto 0 auto;
  border-width: 2px;
  border-radius: 8px;
  padding-top: 2px;
  padding-bottom: 2px;
  text-align: center;
}
.alert.important {
  order: -10;
}
.alert-dismissible .btn-close {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  padding: 0.4rem 0.4rem;
}
.alert-dismissible .btn-close:hover {
  background-color: #00000000;
  border: none;
  transform: none;
}

/* Options */
.modal-options,
.alert-options {
  display: flex;
  width: 100%;
  justify-content: space-between;
}
.modal-options {
  margin-top: 10px;
  gap: 20px;
}
.alert-options {
  margin: 2px 0;
  gap: 1rem;
}

.modal-option,
.alert-option {
  flex: 1;
}

.modal-option.warning,
.alert-option.warning {
  border-radius: 6px;
  color: black;
  border: 2px solid #923259;
  background-color: #b65c80;
}
.modal-option.warning:hover,
.alert-option.warning:hover {
  color: white;
  border: 2px solid #6c1236;
  background-color: #923259;
}
.modal-option.warning:active,
.alert-option.warning:active {
  color: white;
  border: 2px solid #b65c80;
  background-color: #6c1236;
}

/* Chaos rolls */
#chaos-roll {
  --x-offset: 0px;
  --y-offset: 0px;
  --rotate: 0deg;
  display: flex;
  position: relative;
  margin-bottom: 16px;
}
#chaos-roll-image {
  width: 10em;
  margin-left: auto;
  margin-right: auto;
  transform: rotate(var(--rotate)) translate(var(--x-offset), var(--y-offset));
}
#chaos-roll-text,
#chaos-roll-elder,
#chaos-roll-fail,
#chaos-roll-skull {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(calc(var(--x-offset) - 50%), calc(var(--y-offset) - 50%))
    rotate(var(--rotate));
}
#chaos-roll-text {
  font-size: 100px;
  color: white;
}
#chaos-roll-elder,
#chaos-roll-fail,
#chaos-roll-skull {
  display: none;
  width: 100px;
}
#chaos-roll-fail {
  transform: scale(1.2)
    translate(calc(var(--x-offset) - 35%), calc(var(--y-offset) - 46%))
    rotate(var(--rotate));
}

#chaos-roll.elder #chaos-roll-elder,
#chaos-roll.fail #chaos-roll-fail,
#chaos-roll.skull #chaos-roll-skull {
  display: block;
}
#chaos-roll.negative #chaos-roll-text {
  transform: translate(calc(var(--x-offset) - 55%), calc(var(--y-offset) - 50%))
    rotate(var(--rotate));
}

#chaos-roll-fade-in {
  position: absolute;
  width: 10em;
  left: 50%;
  transform: translateX(-50%);
  animation: chaos-roll-fade 3s forwards;
}
#chaos-roll-fade-out {
  position: absolute;
  width: 10em;
  left: 50%;
  transform: translateX(-50%);
  animation: chaos-roll-fade 0.5s reverse;
}
@keyframes chaos-roll-fade {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Animations */

.bouncy {
  display: inline-block;
  transition: scale 100ms ease;
}
.bouncy.animate {
  scale: 1.5;
}

.anti-bouncy {
  display: inline-block;
  transition: scale 100ms ease;
}
.anti-bouncy.animate {
  scale: 0.75;
}

.shake {
}
.shake.animate {
  animation: shake 0.5s;
}
@keyframes shake {
  12.5% {
    transform: translate(10px, 0);
  }
  37.5% {
    transform: translate(-10px, 0);
  }
  62.5% {
    transform: translate(5px, 0);
  }
  87.5% {
    transform: translate(-5px, 0);
  }
}

/* shake for objects centered with a translation */
.shake-centered {
}
.shake-centered.animate {
  animation: shake-centered 0.5s;
}
@keyframes shake-centered {
  12.5% {
    transform: translate(calc(10px - 50%), -50%);
  }
  37.5% {
    transform: translate(calc(-10px - 50%), -50%);
  }
  62.5% {
    transform: translate(calc(5px - 50%), -50%);
  }
  87.5% {
    transform: translate(calc(-5px - 50%), -50%);
  }
}

/* shake for hosted counters */
.shake-counter {
}
.shake-counter.animate {
  animation: shake-counter 0.5s;
}
@keyframes shake-counter {
  12.5% {
    transform: translate(calc(10px - 50%), 0);
  }
  37.5% {
    transform: translate(calc(-10px - 50%), 0);
  }
  62.5% {
    transform: translate(calc(5px - 50%), 0);
  }
  87.5% {
    transform: translate(calc(-5px - 50%), 0);
  }
}

.turn-banner {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: all 200ms ease;
  z-index: 9999999999;
}
.turn-banner.animate-in {
  transform: translate(-50%, -50%) scale(1.2);
}
.turn-banner.animate-out {
  transform: translate(-50%, -50%) scale(0);
}

/* Fonts */
.font-scifi {
  font-family: "Anta", sans-serif !important;
  font-weight: 400;
  font-style: normal;
}
.font-fancy {
  font-family: "Eagle Lake", serif !important;
  font-weight: 400;
  font-style: normal;
}

/* BOOTSTRAP EXTENSIONS */

.h-70 {
  height: 70% !important;
}
.h-65 {
  height: 65% !important;
}
.h-60 {
  height: 60% !important;
}
.h-40 {
  height: 40% !important;
}
.h-35 {
  height: 35% !important;
}
.h-30 {
  height: 30% !important;
}

.h-33 {
  height: 33.3333% !important;
}
.h-67 {
  height: 66.6667% !important;
}

/* FONT SIZE */
.font-size-8 {
  font-size: 9px !important;
}
.font-size-9 {
  font-size: 9px !important;
}
.font-size-10 {
  font-size: 10px !important;
}
.font-size-11 {
  font-size: 11px !important;
}
.font-size-12 {
  font-size: 12px !important;
}
.font-size-13 {
  font-size: 13px !important;
}
.font-size-14 {
  font-size: 14px !important;
}
.font-size-15 {
  font-size: 15px !important;
}
.font-size-16 {
  font-size: 16px !important;
}
.font-size-17 {
  font-size: 17px !important;
}
.font-size-18 {
  font-size: 18px !important;
}
.font-size-19 {
  font-size: 19px !important;
}
.font-size-20 {
  font-size: 20px !important;
}
.font-size-21 {
  font-size: 21px !important;
}
.font-size-22 {
  font-size: 22px !important;
}
.font-size-23 {
  font-size: 23px !important;
}
.font-size-24 {
  font-size: 24px !important;
}
.font-size-25 {
  font-size: 25px !important;
}
.font-size-26 {
  font-size: 26px !important;
}
.font-size-27 {
  font-size: 27px !important;
}
.font-size-28 {
  font-size: 28px !important;
}
.font-size-29 {
  font-size: 29px !important;
}
.font-size-30 {
  font-size: 30px !important;
}
.font-size-31 {
  font-size: 31px !important;
}
.font-size-32 {
  font-size: 32px !important;
}
/* skip (add as needed) */
.font-size-72 {
  font-size: 72px !important;
}
